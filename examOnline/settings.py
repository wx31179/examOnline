"""
Django settings for examOnline project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import ldap,logging
from django_auth_ldap.config import LDAPSearch,PosixGroupType,ActiveDirectoryGroupType


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'n_^lf+ttpe6ezk4c9!r6@bz(r)p^t8de_7$f%#x%(97k*ezajw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'exam_online'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'exam_online.Middleware.user_login_required',

]

ROOT_URLCONF = 'examOnline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'examOnline.wsgi.application'
DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'examOnline',
        'HOST': '15.96.140.13',
        'USER': 'root',
        'PASSWORD': 'qwe123',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


LOGIN_URL = '/'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'collectstatic')  # 此处必须，为新添加

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),  # 此处必须，为新添加
)
#此为上传图片的路径
UPLOAD_URL = '/uploads/'
UPLOAD_ROOT = os.path.join(BASE_DIR,'uploads')
#此为上传文档的路径
DOC_URL = '/doc_upload/'
DOC_ROOT = os.path.join(BASE_DIR,'doc_upload')

AUTH_LDAP_SERVER_URI = 'ldap://auth.hpicorp.net:389'
AUTH_LDAP_BIND_DN = 'CN=renjie.wang@hp.com,OU=CN,OU=Asiapacific,OU=Users,OU=Accounts,DC=auth,DC=hpicorp,DC=net'
AUTH_LDAP_BIND_PASSWORD = '$4Rfv%5Tgb^6Yhn'
AUTH_LDAP_USER_SEARCH = LDAPSearch('OU=Users,OU=Accounts,dc=auth,dc=hpicorp,dc=net', ldap.SCOPE_SUBTREE, '(SAMAccountName=%(user)s)',)
AUTH_LDAP_GROUP_SEARCH = LDAPSearch('CN=hpi_bys_ctss@hp.com,OU=CN,OU=Asiapacific,OU=Managed Groups,OU=Accounts,DC=auth,DC=hpicorp,DC=net', ldap.SCOPE_SUBTREE, '(objectClass=group)')
AUTH_LDAP_GROUP_TYPE = ActiveDirectoryGroupType()

# Only users in this group can log in.
#AUTH_LDAP_REQUIRE_GROUP = 'DC=test,DC=domain,DC=com'

# Populate the Django user from the LDAP directory.
AUTH_LDAP_USER_ATTR_MAP = {
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail'
}

AUTH_LDAP_PROFILE_ATTR_MAP = {
   "employee_number": "employeeNumber"
}

# This is the default
AUTH_LDAP_ALWAYS_UPDATE_USER = False

# Use LDAP group membership to calculate group permissions.
#AUTH_LDAP_FIND_GROUP_PERMS = True

# Cache group memberships for 5 minutes to reduce LDAP traffic
AUTH_LDAP_CACHE_GROUPS = True
AUTH_LDAP_GROUP_CACHE_TIMEOUT = 300
AUTH_LDAP_GLOBAL_OPTIONS = {
    ldap.OPT_X_TLS_REQUIRE_CERT: False,
    ldap.OPT_REFERRALS: False,
}

# Keep ModexampleBackend around for per-user permissions and maybe a local superuser.
AUTHENTICATION_BACKENDS = (
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)

SESSION_EXPIRE_AT_BROWSER_CLOSE = True